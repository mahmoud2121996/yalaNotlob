{"ast":null,"code":"'use strict';\n\nvar Coffee = require('./lib/coffee');\n\nvar is = require('is-type-of');\n\nvar Rule = require('./lib/rule');\n\nexports.Coffee = Coffee;\nexports.Rule = Rule;\n/**\n * fork a child process to test\n * @param {String} modulePath - The module to run in the child\n * @param {Array} args - List of string arguments\n * @param {Object} opt - fork options\n * @see https://nodejs.org/api/child_process.html#child_process_child_process_fork_modulepath_args_options\n * @return {Coffee} coffee instance\n */\n\nexports.fork = function (modulePath, args, opt) {\n  // fork('/path/to/cli', { execArgv: [] })\n  if (!opt && !is.array(args)) {\n    opt = args;\n    args = undefined;\n  }\n\n  return new Coffee({\n    method: 'fork',\n    cmd: modulePath,\n    args: args,\n    opt: opt\n  });\n};\n/**\n * spawn a child process to test\n * @param  {String} cmd - The command to run\n * @param  {Array} args - List of string arguments\n * @param  {Object} opt - spawn options\n * @return {Coffee} coffee instance\n */\n\n\nexports.spawn = function (cmd, args, opt) {\n  // spawn('/path/to/cli', { execArgv: [] })\n  if (!opt && !is.array(args)) {\n    opt = args;\n    args = undefined;\n  }\n\n  return new Coffee({\n    method: 'spawn',\n    cmd: cmd,\n    args: args,\n    opt: opt\n  });\n};","map":null,"metadata":{},"sourceType":"module"}