{"ast":null,"code":"'use strict';\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar parseQuery = require('./parseQuery');\n\nfunction getOptions(loaderContext) {\n  var query = loaderContext.query;\n\n  if (typeof query === 'string' && query !== '') {\n    return parseQuery(loaderContext.query);\n  }\n\n  if (!query || _typeof(query) !== 'object') {\n    // Not object-like queries are not supported.\n    return null;\n  }\n\n  return query;\n}\n\nmodule.exports = getOptions;","map":null,"metadata":{},"sourceType":"module"}